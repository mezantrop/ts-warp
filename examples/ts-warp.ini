# -------------------------------------------------------------------------------------------------------------------- #
# TS-Warp - Main configuration file                                                                                    #
# -------------------------------------------------------------------------------------------------------------------- #

# -------------------------------------------------------------------------------------------------------------------- #
# ! Remove example entries and write your own configuration !                                                          #
# -------------------------------------------------------------------------------------------------------------------- #

; Variables are case insensitive i.e. target_host is the same as tArGeT_HoSt
# This is a remark
; That is a remark as well

[HOME NETWORK]                                      ; Section definition allows LeTtErS, numbers, - and _
; target_host = 192.168.1.1
; target_host = Anvil
target_network = 192.168.1.0/24
; target_network = 192.168.1.0/255.255.255.0
; target_range = 192.168.1.1/192.168.1.20           ; Not recommended for big ranges > 256 addresses
; target_domain = balmora.lan                       ; To make it work local DNS must be able to resolve remote addresses
proxy_server = 192.168.1.237                        ; Defaults proxy_type is Socks5 and port 1080
; proxy_server = 192.168.1.237:1080
; proxy_type = 5                                    ; Socks5 (default)
; proxy_type = 4                                    ; Socks4
; proxy_type = H                                    ; HTTP
proxy_user = username
; proxy_password = plain:TopSecretPass@34           ; Plain text password
proxy_password = tsw01:08415D5F6519633F1D150E08552837506D12383C177C176F7C322E1F562D ; Encoded password, see ts-pass

[HTTPS PROXY]                                       ; This is an example of an entry for HTTPS proxy server
proxy_server = 192.168.1.237:3128                   ; Don't forget setting port number
proxy_type = H
; proxy_user = myusername
; proxy_password = tsw01:08415D5F6519633F1D150E08552837506D12383C177C176F7C322E1F562D
target_network = 192.168.15.0/24

[SSH2 proxy]
proxy_server = 192.168.1.238:22                     ; Don't forget setting port number
proxy_type = S
proxy_user = myusername
proxy_password = tsw01:08415D5F6519633F1D150E08552837506D12383C177C176F7C322E1F562D
proxy_key = /path/to/id_rsa                         ; The file must be readeable for the user, ts warp is run from. By
                                                    ; default it is "nobody". Use "-u" argument of ts-warp to change it.
proxy_key_passphrase = tsw01:08415D5F6519633F1D150E08552837506D12383C177C176F7C322E1F562D
proxy_ssh_force_auth = Y                            ; N (default) - try negotiating SSH2 auth methods or Y - force them
; proxy_key_passphrase = plain:TopSecretPass@34
target_network = 192.168.16.0/24

; THREE, ONE and TWO: Proxy chains example
[THREE]
target_network = 10.0.10.0/24
proxy_server = 10.0.2.1
proxy_chain = ONE, TWO                              ; To reach THREE you need to connect ONE, then TWO
; nit_pool = lab.local:192.168.168.0/24             ; NS-Warp remote name resolution

[ONE]
target_network = 10.0.20.0/24
proxy_server = 10.0.12.1

[TWO]
target_network = 10.0.30.0/24
proxy_server = 10.0.22.1

; WORK_PRIMARY / WORK_BACKUP: Failover example
[WORK_PRIMARY]
section_balance = failover                          ; section_balance can take none, failover and roundrobin values
target_network = 123.45.123.0/24
target_network = 123.45.234.96/27
proxy_server = 123.45.1.11:1080

[WORK_BACKUP]
section_balance = failover
target_network = 123.45.123.0/24
target_network = 123.45.234.96/27
proxy_server = 123.45.1.12:1080

; Permit TS-Warp internal proxy server accepting incomming Socks5 connections on port 10800 TCP
; [TS-WARP-Socks5]
; target_host = 127.0.0.1
; proxy_server = 127.0.0.1:7080

; Permit TS-Warp internal proxy server accepting incomming HTTP connections on port 8080 TCP
; [TS-WARP-HTTP]
; target_host = 127.0.0.1
; proxy_server = 127.0.0.1:8080

; Uncomment below section to forward unmatched requests to default proxy
; [DEFAULT]
; target_network = 0.0.0.0/0.0.0.0
; proxy_server = 192.168.1.237

; If the above [DEFAULT] section is left commented, requests are served as
; direct connections to their targets
